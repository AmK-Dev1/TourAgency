// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TourAgency.Data;

#nullable disable

namespace TourAgency.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250419193145_BookingActivitynew")]
    partial class BookingActivitynew
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ActivityTrip", b =>
                {
                    b.Property<int>("ActivitiesId")
                        .HasColumnType("int");

                    b.Property<int>("TripsId")
                        .HasColumnType("int");

                    b.HasKey("ActivitiesId", "TripsId");

                    b.HasIndex("TripsId");

                    b.ToTable("ActivityTrip");

                    b.HasData(
                        new
                        {
                            ActivitiesId = 1,
                            TripsId = 1
                        },
                        new
                        {
                            ActivitiesId = 2,
                            TripsId = 2
                        },
                        new
                        {
                            ActivitiesId = 3,
                            TripsId = 3
                        },
                        new
                        {
                            ActivitiesId = 4,
                            TripsId = 4
                        },
                        new
                        {
                            ActivitiesId = 5,
                            TripsId = 5
                        });
                });

            modelBuilder.Entity("DestinationTrip", b =>
                {
                    b.Property<int>("DestinationsId")
                        .HasColumnType("int");

                    b.Property<int>("TripsId")
                        .HasColumnType("int");

                    b.HasKey("DestinationsId", "TripsId");

                    b.HasIndex("TripsId");

                    b.ToTable("DestinationTrip");

                    b.HasData(
                        new
                        {
                            DestinationsId = 1,
                            TripsId = 1
                        },
                        new
                        {
                            DestinationsId = 2,
                            TripsId = 1
                        },
                        new
                        {
                            DestinationsId = 3,
                            TripsId = 2
                        },
                        new
                        {
                            DestinationsId = 4,
                            TripsId = 3
                        },
                        new
                        {
                            DestinationsId = 5,
                            TripsId = 4
                        });
                });

            modelBuilder.Entity("FlightTrip", b =>
                {
                    b.Property<int>("FlightsId")
                        .HasColumnType("int");

                    b.Property<int>("TripsId")
                        .HasColumnType("int");

                    b.HasKey("FlightsId", "TripsId");

                    b.HasIndex("TripsId");

                    b.ToTable("FlightTrip");

                    b.HasData(
                        new
                        {
                            FlightsId = 1,
                            TripsId = 1
                        },
                        new
                        {
                            FlightsId = 2,
                            TripsId = 2
                        },
                        new
                        {
                            FlightsId = 3,
                            TripsId = 3
                        },
                        new
                        {
                            FlightsId = 4,
                            TripsId = 4
                        },
                        new
                        {
                            FlightsId = 5,
                            TripsId = 5
                        });
                });

            modelBuilder.Entity("HotelTrip", b =>
                {
                    b.Property<int>("HotelsId")
                        .HasColumnType("int");

                    b.Property<int>("TripsId")
                        .HasColumnType("int");

                    b.HasKey("HotelsId", "TripsId");

                    b.HasIndex("TripsId");

                    b.ToTable("HotelTrip");

                    b.HasData(
                        new
                        {
                            HotelsId = 1,
                            TripsId = 1
                        },
                        new
                        {
                            HotelsId = 2,
                            TripsId = 1
                        },
                        new
                        {
                            HotelsId = 3,
                            TripsId = 2
                        },
                        new
                        {
                            HotelsId = 4,
                            TripsId = 3
                        },
                        new
                        {
                            HotelsId = 5,
                            TripsId = 4
                        });
                });

            modelBuilder.Entity("ReservationTrip", b =>
                {
                    b.Property<int>("ReservationsId")
                        .HasColumnType("int");

                    b.Property<int>("TripsId")
                        .HasColumnType("int");

                    b.HasKey("ReservationsId", "TripsId");

                    b.HasIndex("TripsId");

                    b.ToTable("ReservationTrip");
                });

            modelBuilder.Entity("TourAgency.Models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A thrilling ski trip in the Alps.",
                            ImageUrl = "images/ski.jpg",
                            Name = "Skiing Adventure",
                            Price = 150m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Explore the wonders of the local museum.",
                            ImageUrl = "images/museum.jpg",
                            Name = "Museum Tour",
                            Price = 50m
                        },
                        new
                        {
                            Id = 3,
                            Description = "A guided tour of the city's landmarks.",
                            ImageUrl = "images/sight.jpg",
                            Name = "City Sightseeing",
                            Price = 75m
                        },
                        new
                        {
                            Id = 4,
                            Description = "A challenging hike through scenic mountains.",
                            ImageUrl = "images/hiking.jpg",
                            Name = "Mountain Hiking",
                            Price = 100m
                        },
                        new
                        {
                            Id = 5,
                            Description = "Experience underwater adventure.",
                            ImageUrl = "images/diving.jpg",
                            Name = "Scuba Diving",
                            Price = 200m
                        });
                });

            modelBuilder.Entity("TourAgency.Models.ActivityBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ActivityDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("Participants")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("ActivityBookings");
                });

            modelBuilder.Entity("TourAgency.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookingDate = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserEmail = "john.doe@example.com"
                        });
                });

            modelBuilder.Entity("TourAgency.Models.BookingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int>("EntityBookingId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("BookingItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookingId = 1,
                            EntityBookingId = 1,
                            Type = "Hotel"
                        });
                });

            modelBuilder.Entity("TourAgency.Models.Destination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Destination");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Paris",
                            Country = "France",
                            ImageUrl = "images/france.jpg"
                        },
                        new
                        {
                            Id = 2,
                            City = "Rome",
                            Country = "Italy",
                            ImageUrl = "images/rome.jpg"
                        },
                        new
                        {
                            Id = 3,
                            City = "New York",
                            Country = "USA",
                            ImageUrl = "images/usa.jpg"
                        },
                        new
                        {
                            Id = 4,
                            City = "Tokyo",
                            Country = "Japan",
                            ImageUrl = "images/japan.jpg"
                        },
                        new
                        {
                            Id = 5,
                            City = "Sydney",
                            Country = "Australia",
                            ImageUrl = "images/australia.jpg"
                        });
                });

            modelBuilder.Entity("TourAgency.Models.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Airline")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Airline = "Air France",
                            ArrivalTime = new DateTime(2025, 1, 10, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureTime = new DateTime(2025, 1, 10, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            FlightNumber = "AF123",
                            Price = 500m
                        },
                        new
                        {
                            Id = 2,
                            Airline = "Delta Airlines",
                            ArrivalTime = new DateTime(2025, 1, 12, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureTime = new DateTime(2025, 1, 12, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            FlightNumber = "DL456",
                            Price = 450m
                        },
                        new
                        {
                            Id = 3,
                            Airline = "British Airways",
                            ArrivalTime = new DateTime(2025, 1, 15, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            DepartureTime = new DateTime(2025, 1, 15, 7, 30, 0, 0, DateTimeKind.Unspecified),
                            FlightNumber = "BA789",
                            Price = 550m
                        },
                        new
                        {
                            Id = 4,
                            Airline = "Lufthansa",
                            ArrivalTime = new DateTime(2025, 1, 18, 15, 45, 0, 0, DateTimeKind.Unspecified),
                            DepartureTime = new DateTime(2025, 1, 18, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            FlightNumber = "LH321",
                            Price = 600m
                        },
                        new
                        {
                            Id = 5,
                            Airline = "Qantas",
                            ArrivalTime = new DateTime(2025, 1, 20, 14, 45, 0, 0, DateTimeKind.Unspecified),
                            DepartureTime = new DateTime(2025, 1, 20, 6, 45, 0, 0, DateTimeKind.Unspecified),
                            FlightNumber = "QF654",
                            Price = 650m
                        });
                });

            modelBuilder.Entity("TourAgency.Models.FlightBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FlightId")
                        .HasColumnType("int");

                    b.Property<int>("Passengers")
                        .HasColumnType("int");

                    b.Property<string>("TravelClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("FlightBookings");
                });

            modelBuilder.Entity("TourAgency.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "images/hotel1.jpg",
                            Location = "Paris",
                            Name = "Grand Paris Hotel",
                            Price = 150m
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "images/hotel2.jpg",
                            Location = "Rome",
                            Name = "Rome Luxury Suites",
                            Price = 200m
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "images/hotel3.jpg",
                            Location = "New York",
                            Name = "NYC Central Park Hotel",
                            Price = 180m
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "images/hotel4.jpg",
                            Location = "Tokyo",
                            Name = "Tokyo Sakura Hotel",
                            Price = 140m
                        },
                        new
                        {
                            Id = 5,
                            ImageUrl = "images/hotel1.jpg",
                            Location = "Sydney",
                            Name = "Sydney Harbour Hotel",
                            Price = 220m
                        });
                });

            modelBuilder.Entity("TourAgency.Models.HotelBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("datetime2");

                    b.Property<int>("Guests")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelBookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CheckIn = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOut = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Guests = 2,
                            HotelId = 1,
                            RoomType = "Double"
                        });
                });

            modelBuilder.Entity("TourAgency.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("HotelId");

                    b.HasIndex("UserId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Url = "https://example.com/images/profile1.jpg"
                        },
                        new
                        {
                            Id = 2,
                            Url = "https://example.com/images/profile2.jpg"
                        },
                        new
                        {
                            Id = 3,
                            Url = "https://example.com/images/profile3.jpg"
                        },
                        new
                        {
                            Id = 4,
                            Url = "https://example.com/images/profile4.jpg"
                        },
                        new
                        {
                            Id = 5,
                            Url = "https://example.com/images/profile5.jpg"
                        },
                        new
                        {
                            Id = 6,
                            Url = "images/france"
                        },
                        new
                        {
                            Id = 7,
                            Url = "images/japan"
                        },
                        new
                        {
                            Id = 8,
                            Url = "images/rome"
                        },
                        new
                        {
                            Id = 9,
                            Url = "images/usa"
                        });
                });

            modelBuilder.Entity("TourAgency.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ReservationDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            ReservationDate = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            ReservationDate = new DateTime(2025, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            ReservationDate = new DateTime(2025, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            ReservationDate = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 5
                        });
                });

            modelBuilder.Entity("TourAgency.Models.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "European Adventure"
                        },
                        new
                        {
                            Id = 2,
                            Name = "American Journey"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Asian Escape"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Oceanic Retreat"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Cultural Tour"
                        });
                });

            modelBuilder.Entity("TourAgency.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ProfileImageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfileImageId")
                        .IsUnique()
                        .HasFilter("[ProfileImageId] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john.doe@example.com",
                            Name = "John Doe",
                            Password = "password123",
                            ProfileImageId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "jane.smith@example.com",
                            Name = "Jane Smith",
                            Password = "password456",
                            ProfileImageId = 2
                        },
                        new
                        {
                            Id = 3,
                            Email = "alice.johnson@example.com",
                            Name = "Alice Johnson",
                            Password = "password789",
                            ProfileImageId = 3
                        },
                        new
                        {
                            Id = 4,
                            Email = "bob.williams@example.com",
                            Name = "Bob Williams",
                            Password = "password111",
                            ProfileImageId = 4
                        },
                        new
                        {
                            Id = 5,
                            Email = "emma.davis@example.com",
                            Name = "Emma Davis",
                            Password = "password222",
                            ProfileImageId = 5
                        });
                });

            modelBuilder.Entity("ActivityTrip", b =>
                {
                    b.HasOne("TourAgency.Models.Activity", null)
                        .WithMany()
                        .HasForeignKey("ActivitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TourAgency.Models.Trip", null)
                        .WithMany()
                        .HasForeignKey("TripsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DestinationTrip", b =>
                {
                    b.HasOne("TourAgency.Models.Destination", null)
                        .WithMany()
                        .HasForeignKey("DestinationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TourAgency.Models.Trip", null)
                        .WithMany()
                        .HasForeignKey("TripsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FlightTrip", b =>
                {
                    b.HasOne("TourAgency.Models.Flight", null)
                        .WithMany()
                        .HasForeignKey("FlightsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TourAgency.Models.Trip", null)
                        .WithMany()
                        .HasForeignKey("TripsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HotelTrip", b =>
                {
                    b.HasOne("TourAgency.Models.Hotel", null)
                        .WithMany()
                        .HasForeignKey("HotelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TourAgency.Models.Trip", null)
                        .WithMany()
                        .HasForeignKey("TripsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReservationTrip", b =>
                {
                    b.HasOne("TourAgency.Models.Reservation", null)
                        .WithMany()
                        .HasForeignKey("ReservationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TourAgency.Models.Trip", null)
                        .WithMany()
                        .HasForeignKey("TripsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TourAgency.Models.ActivityBooking", b =>
                {
                    b.HasOne("TourAgency.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("TourAgency.Models.BookingItem", b =>
                {
                    b.HasOne("TourAgency.Models.Booking", null)
                        .WithMany("Items")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TourAgency.Models.FlightBooking", b =>
                {
                    b.HasOne("TourAgency.Models.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("TourAgency.Models.HotelBooking", b =>
                {
                    b.HasOne("TourAgency.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("TourAgency.Models.Image", b =>
                {
                    b.HasOne("TourAgency.Models.Activity", "Activity")
                        .WithMany("Images")
                        .HasForeignKey("ActivityId");

                    b.HasOne("TourAgency.Models.Hotel", "Hotel")
                        .WithMany("Images")
                        .HasForeignKey("HotelId");

                    b.HasOne("TourAgency.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Activity");

                    b.Navigation("Hotel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TourAgency.Models.Reservation", b =>
                {
                    b.HasOne("TourAgency.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TourAgency.Models.User", b =>
                {
                    b.HasOne("TourAgency.Models.Image", "ProfileImage")
                        .WithOne()
                        .HasForeignKey("TourAgency.Models.User", "ProfileImageId");

                    b.Navigation("ProfileImage");
                });

            modelBuilder.Entity("TourAgency.Models.Activity", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("TourAgency.Models.Booking", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("TourAgency.Models.Hotel", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("TourAgency.Models.User", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
